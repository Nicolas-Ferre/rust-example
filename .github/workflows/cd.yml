name: CD

on:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION_STABLE: 1.51.0
  CRATE_PATHS: .
  AUTHORIZED_ACTORS: '["Nicolas-Ferre"]'

jobs:

  test-ubuntu:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Build
        run: cargo build --all-targets
      - name: Test
        run: cargo test

  test-windows:
    runs-on: windows-2019
    needs: test-ubuntu
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Build
        run: cargo build --all-targets
      - name: Test
        run: cargo test

  test-macos:
    runs-on: macos-10.15
    needs: test-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Build
        run: cargo build --all-targets
      - name: Test
        run: cargo test

  check-publication:
    runs-on: ubuntu-18.04
    needs: test-macos
    if: ${{ contains('["Nicolas-Ferre"]', github.actor) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Check publication
        run: bash .github/workflows/scripts/check_publication.sh

  publish:
    runs-on: ubuntu-18.04
    needs: test-macos
    if: ${{ contains(env.AUTHORIZED_ACTORS, github.actor) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_VERSION_STABLE }}
          profile: minimal
          override: true
      - name: Publish
        run: bash .github/workflows/scripts/run_publication.sh
